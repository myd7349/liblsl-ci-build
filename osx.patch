diff --git a/cmake/LSLCMake.cmake b/cmake/LSLCMake.cmake
index f64b001b..0912a88f 100644
--- a/cmake/LSLCMake.cmake
+++ b/cmake/LSLCMake.cmake
@@ -167,20 +167,28 @@ function(installLSLApp target)
 		get_target_property(target_is_bundle ${target} MACOSX_BUNDLE)
 		set(APPLE_APP_PATH "\${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}/${target}.app")
 	endif(APPLE)
+
+	message(STATUS "================================================================================")
+	message(STATUS "DEPLOYMENT_TARGET: ${DEPLOYMENT_TARGET}")
+	message(STATUS "CMAKE_OSX_ARCHITECTURES: ${CMAKE_OSX_ARCHITECTURES}")
+	message(STATUS "APPLE_TARGET_TRIPLE: {APPLE_TARGET_TRIPLE}")
+	message(STATUS "")
+	message(STATUS "")
+	message(STATUS "================================================================================")
 	
 	# Copy lsl library. Logic is a bit complicated.
 	# If we are not building liblsl, and the (app) target is not using system liblsl
 	# (LSL_UNIXFOLDERS is maybe a poor proxy for use of system liblsl...),
 	# then the application needs to have liblsl in an expected location.
-	if(NOT TARGET liblsl AND NOT LSL_UNIXFOLDERS)
+	if(NOT TARGET lsl AND NOT LSL_UNIXFOLDERS)
 		if(APPLE AND target_is_bundle)
 			# Copy the dylib into the bundle
-			install(FILES $<TARGET_FILE:LSL::lsl>
+			install(FILES $<TARGET_FILE:lsl>
 				DESTINATION ${CMAKE_INSTALL_BINDIR}/${target}.app/Contents/MacOS/
 				COMPONENT ${SHAREDLIBCOMPONENT})
 		else()
 			# Copy the dll/dylib/so next to the executable binary.
-			install(FILES $<TARGET_FILE:LSL::lsl>
+			install(FILES $<TARGET_FILE:lsl>
 				DESTINATION ${CMAKE_INSTALL_BINDIR}
 				COMPONENT ${SHAREDLIBCOMPONENT})
 		endif(APPLE AND target_is_bundle)
@@ -191,7 +199,7 @@ function(installLSLApp target)
 	if(APPLE AND target_is_bundle AND NOT qtapp)
 		install(CODE
 			"
-				get_filename_component(LIBDIR $<TARGET_FILE:LSL::lsl> DIRECTORY)
+				get_filename_component(LIBDIR $<TARGET_FILE:lsl> DIRECTORY)
 				message(STATUS \${LIBDIR})
 				include(BundleUtilities)
 				set(BU_CHMOD_BUNDLE_ITEMS ON)
